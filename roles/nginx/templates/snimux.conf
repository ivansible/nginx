map $ssl_preread_protocol $sni_noproto {
  ""      noproto;
  TLSv1   "";
  TLSv1.1 "";
  TLSv1.2 "";
  TLSv1.3 "";
  default "";
}
map $sni_noproto$ssl_preread_server_name $sni_upstream_port {
  include {{ nginx_snimux_dir }}/*.conf;
{% if nginx_nossl_upstream_port |int %}
  noproto {{ nginx_nossl_upstream_port }};
{% endif %}
  default {{ nginx_ssl_port_local }};
}
{% set listen_addr = [nginx_ssl_listen_addr] |flatten |select |list %}
{% set listen_ipv4 = listen_addr |ansible.utils.ipv4 %}
{% set listen_any = '*' in listen_addr %}
{% set via_sslh = use_sslh |bool %}
{% if listen_ipv4 or listen_any or via_sslh %}
server {
{%   if via_sslh %}
    listen 127.0.0.1:{{ nginx_snimux_port }};
{%   elif listen_any %}
    listen {{ nginx_ssl_port }};
{%   else %}
{%     for addr in listen_ipv4 %}
    listen {{ addr }}:{{ nginx_ssl_port }};
{%     endfor %}
{%   endif %}
    ssl_preread on;
    proxy_pass 127.0.0.1:$sni_upstream_port;
{%   if nginx_transparent |bool %}
    proxy_bind $remote_addr transparent;
{%   endif %}
}
{% endif %}
{% set bind_ipv6 = nginx_bind_ipv6 |d(false) |bool %}
{% set listen_ipv6 = listen_addr |ansible.utils.ipv6 %}
{% if bind_ipv6 and (via_sslh or listen_any or listen_ipv6) %}
server {
{%   if via_sslh %}
    listen [::1]:{{ nginx_snimux_port }};
{%   elif listen_any %}
    listen [::]:{{ nginx_ssl_port }};
{%   else %}
{%     for addr in listen_ipv6 %}
    listen {{ addr |ansible.utils.ipwrap }}:{{ nginx_ssl_port }};
{%     endfor %}
{%   endif %}
    ssl_preread on;
    proxy_pass [::1]:$sni_upstream_port;
{%   if nginx_transparent |bool %}
    proxy_bind $remote_addr transparent;
{%   endif %}
}
{% endif %}
