---
- name: install squid with ssl support from ppa
  ansible.builtin.import_tasks: install-ppa.yml
  when: squid_from_ppa |bool
  tags: srv_squid_install

- name: unhold package before upgrade
  ansible.builtin.command:
    cmd: apt-mark unhold "{{ squid_pkg }}"
  when: squid_upgrade |bool
  register: unhold_squid_result
  changed_when: unhold_squid_result.stdout |d('') is search('Canceled hold')
  notify: hold squid upgrades
  ignore_errors: true
  tags: srv_squid_install

- name: install (upgrade) squid package
  ansible.builtin.apt:
    name: "{{ squid_pkg }}"
    state: "{{ squid_upgrade |ternary('latest','present') }}"
    install_recommends: false
  tags: srv_squid_install


- name: setup self-signed ssl certificate for squid
  ansible.builtin.import_tasks: ssl-selfsigned.yml
  when:
    - squid_ssl_enable |bool
    - self_signed
  tags: srv_squid_ssl

- name: configure letsencrypt certificate for squid
  ansible.builtin.import_tasks: ssl-letsencrypt.yml
  when:
    - squid_ssl_enable |bool
    - not self_signed
    - certbot_group |d('')
  tags: srv_squid_ssl


- name: add squid hosts for upstream peers
  ansible.builtin.import_tasks: hosts.yml
  tags:
    - srv_squid_config
    - srv_squid_hosts

- name: configure squid
  ansible.builtin.import_tasks: config.yml
  tags: srv_squid_config

- name: url-rewrite for squid
  ansible.builtin.import_tasks: url-rewrite.yml
  when: squid_url_rewrite |d([],true) |length > 0
  tags: srv_squid_config


- name: setup squid cloaking
  ansible.builtin.import_tasks: cloaking.yml
  when: squid_cloaking |bool
  tags: srv_squid_cloaking


- name: setup ufw firewall for squid
  ansible.builtin.import_tasks: firewall-ufw.yml
  when: lin_firewall == 'ufw'
  tags: srv_squid_firewall

- name: setup ferm firewall for squid
  ansible.builtin.import_tasks: firewall-ferm.yml
  when: lin_firewall == 'ferm'
  tags: srv_squid_firewall

- name: transparent iptables rules for squid from ppa
  ansible.builtin.import_tasks: iptables.yml
  when:
    - lin_firewall in ['ufw', 'ferm']
    - squid_from_ppa |bool
  tags: srv_squid_iptables


- name: stop obsolete squid service (ok to fail, if not found)
  ansible.builtin.systemd:
    name: squid
    state: stopped
    enabled: false
    daemon_reload: true
  when:
    - squid_from_ppa |bool
    - squid_ssl_ppa is defined
    - squid_ssl_ppa is changed
  failed_when: false
  tags: srv_squid_service

- name: activate squid service
  ansible.builtin.systemd:
    name: "{{ squid_pkg }}"
    state: started
    enabled: true
    daemon_reload: "{{ squid_from_ppa |bool }}"
  tags: srv_squid_service


- name: setup nginx http redirector for squid
  ansible.builtin.template:
    src: nginx.conf.j2
    dest: "{{ nginx_site_dir }}/squid.conf"
    mode: 0644
  notify: reload nginx service
  when:
    - squid_nginx_redirect |bool
    - not squid_nginx_use_streams |bool
  tags: srv_squid_nginx

- name: remove squid http redirector from nginx
  ansible.builtin.file:
    path: "{{ nginx_site_dir }}/squid.conf"
    state: absent
  notify: reload nginx service
  when:
    - not squid_nginx_redirect |bool
      or squid_nginx_use_streams |bool
  tags: srv_squid_nginx

- name: setup nginx sni upstream for mtproxy
  ansible.builtin.include_role:
    name: ivansible.base.nginx
    tasks_from: setup_sni_upstream.yml
  vars:
    facility: squid
    hostname: "{{ squid_nginx_use_streams |bool |ternary(squid_host, '') }}"
    port: "{{ squid_ssl_port }}"
  when:
    - squid_nginx_redirect |bool
    - squid_ssl_port |d(0,true) |int
  tags: srv_squid_nginx


- name: directory for distributed pac files
  ansible.builtin.file:
    path: "{{ squid_etc_dir }}/pac"
    state: directory
    owner: root
    group: "{{ web_group }}"
    mode: 0750
  when: web_group is defined
  tags: srv_squid_pac

- name: generate pac files
  ansible.builtin.template:
    src: squid.pac.j2
    dest: "{{ squid_etc_dir }}/pac/{{ item.name }}.pac"
    owner: root
    group: "{{ web_group }}"
    mode: 0640
  loop: "{{ squid_pac.pac_types }}"
  loop_control:
    label: "{{ item.name }}"
  when: web_group is defined
  tags: srv_squid_pac


- name: configure squid logging
  ansible.builtin.import_tasks: syslog.yml
  tags: srv_squid_logs

- name: setup dns records in cloudflare for squid
  ansible.builtin.import_role:
    name: ivansible.nginx.cdn
    tasks_from: cloudflare.yml
  vars:
    records: "{{ squid_cloudflare_dns }}"
  when: squid_cloudflare_dns is defined
  tags: srv_squid_cloudflare
...
